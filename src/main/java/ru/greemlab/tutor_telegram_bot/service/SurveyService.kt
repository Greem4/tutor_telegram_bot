package ru.greemlab.tutor_telegram_bot.service

import org.springframework.stereotype.Service
import ru.greemlab.tutor_telegram_bot.enums.SurveyQuestion
import ru.greemlab.tutor_telegram_bot.session.SurveySession
import java.util.concurrent.ConcurrentHashMap

@Service
class SurveyService(
    private val sender: SenderService,
    private val kb: KeyboardService,
) {

    /* –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–ø—Ä–æ—Å—ã */
    private val sessions = ConcurrentHashMap<Long, SurveySession>()

    /* –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (id / nick / phone) —Ö—Ä–∞–Ω–∏—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ -> –Ω—É–∂–µ–Ω CaseService */
    private val profile = ConcurrentHashMap<Long, Triple<Long, String?, String?>>()

    private val completed =  ConcurrentHashMap<Long, Map<SurveyQuestion, String>>()

    fun cacheProfile(chat: Long, id: Long, nick: String?, phone: String?) {
        profile[chat] = Triple(id, nick, phone)
    }

    fun profile(chat: Long): Triple<Long, String?, String?>? = profile[chat]

     fun start(chat: Long, userId: Long, nick: String?, phone: String?) {
        sessions[chat] = SurveySession(userId, nick, phone)
        cacheProfile(chat, userId, nick, phone)
        ask(chat)
    }

    fun cancel(chat: Long) {
        sessions.remove(chat)
    }

    fun active(chat: Long): Boolean {
        return sessions.containsKey(chat)
    }

    fun answers(chat: Long): Map<SurveyQuestion, String> =
        sessions[chat]?.dump() ?: completed[chat] ?: emptyMap()

    /* ------------ –ª–æ–≥–∏–∫–∞ –∑–∞–¥–∞–Ω–∏–π ------------ */

    private fun ask(chat: Long) {
        sessions[chat]?.let {                      //TODO –≤–∫–ª –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
            sender.send(chat, it.current.prompt, /*kb.cancel()*/ )
        }
    }

     fun answer(chat: Long, txt: String) {
        val s = sessions[chat] ?: return
        s.answer(txt)
        if (s.next()) ask(chat) else finish(chat)
    }

    private fun finish(chat: Long) {
        val session = sessions[chat] ?: return

        completed[chat] = session.dump()

        sessions.remove(chat)
        sender.send(
            chat, """
            üëè –í—ã –ø—Ä–æ—à–ª–∏ 1‚Äë–π —ç—Ç–∞–ø!
            ‚û° –í–ø–µ—Ä–µ–¥–∏ 2‚Äë–π —ç—Ç–∞–ø‚Äî –∫–µ–π—Å—ã (3—à—Ç, ‚âà30–º–∏–Ω).
            –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
        """.trimIndent(), kb.beginCases()
        )
    }
}