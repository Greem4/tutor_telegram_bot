package ru.greemlab.tutor_telegram_bot.service

// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import org.springframework.beans.factory.annotation.Value
import org.springframework.stereotype.Service
import ru.greemlab.tutor_telegram_bot.catalog.CaseCatalog
import ru.greemlab.tutor_telegram_bot.entity.CaseAnswer
import ru.greemlab.tutor_telegram_bot.entity.TelegramUser
import ru.greemlab.tutor_telegram_bot.enums.SurveyQuestion
import ru.greemlab.tutor_telegram_bot.repository.CaseAnswerRepository
import ru.greemlab.tutor_telegram_bot.repository.SurveyAnswerRepository
import ru.greemlab.tutor_telegram_bot.session.CaseSession
import java.util.concurrent.ConcurrentHashMap

@Service // –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è Spring, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∞—è —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π
class CaseService(
    @Value("\${app.bot.admin_id}") private val adminId: Long?, // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    private val catalog: CaseCatalog, // –ö–∞—Ç–∞–ª–æ–≥ –∫–µ–π—Å–æ–≤
    private val sender: SenderService, // –°–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –º–µ–¥–∏–∞
    private val kb: KeyboardService, // –°–µ—Ä–≤–∏—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    private val pdf: PdfService, // –°–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
    private val surveyService: SurveyService, // –°–µ—Ä–≤–∏—Å, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –∞–Ω–∫–µ—Ç–æ–π
    private val surveyAnswerRepo: SurveyAnswerRepository, // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ—Ç–≤–µ—Ç–æ–≤ –∞–Ω–∫–µ—Ç—ã
    private val caseAnswerRepo: CaseAnswerRepository, // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∫–µ–π—Å—ã
) {
    private val sessions = ConcurrentHashMap<Long, CaseSession>() // –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –∫–µ–π—Å–æ–≤ –ø–æ chatId

    /**
     * –ú–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ —ç—Ç–∞–ø–∞ –∫–µ–π—Å–æ–≤.
     * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–æ—Ö–æ–¥–∏–ª –ª–∏ –æ–Ω –∫–µ–π—Å—ã —Ä–∞–Ω–µ–µ,
     * –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –∫–µ–π—Å–∞–º–∏.
     */
    suspend fun start(chatId: Long) {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–ø—Ä–æ—Å–Ω–æ–π —á–∞—Å—Ç–∏
        val user: TelegramUser = surveyService.takeProfile(chatId)
            ?: run {
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ—Å–∏–º —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å–Ω–∏–∫
                sender.send(chatId, "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å–Ω–∏–∫.", kb.start())
                return
            }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–æ—à—ë–ª –∫–µ–π—Å—ã, –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
        if (user.casesCompleted) {
            sender.send(chatId, "–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–µ–π—Å—ã —Ä–∞–Ω–µ–µ.", kb.remove())
            return
        }

        // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –∫–µ–π—Å–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë
        sessions[chatId] = CaseSession(user, catalog)
        askNext(chatId) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–µ–π—Å
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Å–µ—Å—Å–∏—è –∫–µ–π—Å–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fun active(chatId: Long): Boolean =
        sessions.containsKey(chatId)

    // –û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–µ–π—Å–æ–≤ ‚Äî —É–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    fun cancel(chatId: Long) {
        sessions.remove(chatId)
    }

    /**
     * –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–µ–π—Å.
     * –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–µ–π—Å—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ.
     */
    suspend fun answer(chatId: Long, text: String) {
        val session = sessions[chatId] ?: return // –ï—Å–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç ‚Äî –∏–≥–Ω–æ—Ä
        session.answer(text) // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç

        if (session.next()) { // –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â—ë –∫–µ–π—Å—ã ‚Äî —Å–ª–µ–¥—É—é—â–∏–π
            askNext(chatId)
        } else {
            finish(chatId, session) // –ï—Å–ª–∏ –∫–µ–π—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å ‚Äî —Ñ–∏–Ω–∞–ª
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–µ–π—Å–∞
    private suspend fun askNext(chatId: Long) {
        val kase = sessions[chatId]?.current ?: return // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–µ–π—Å

        sender.photo(chatId, kase.image, kb.cancel())

    }

    /**
     * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —ç—Ç–∞–ø–∞ –∫–µ–π—Å–æ–≤:
     * - –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã
     * - –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
     * - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
     */
    private suspend fun finish(chatId: Long, session: CaseSession) {
        // 1) –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∫–µ–π—Å—ã –≤ –±–∞–∑—É
        session.dump().forEach { (idx, answer) ->
            caseAnswerRepo.save(
                CaseAnswer(
                    user = session.user,
                    caseIndex = idx,
                    answer = answer
                )
            )
        }

        // 2) –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî —Å—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–µ–π—Å–æ–≤
        session.user.apply { casesCompleted = true }
            .also { surveyService.updateUser(it) }

        // 3) –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –∏–∑ –ø–∞–º—è—Ç–∏
        sessions.remove(chatId)

        // 4) –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∏–∑ –∞–Ω–∫–µ—Ç—ã
        val surveyAnswers: Map<SurveyQuestion, String> =
            surveyAnswerRepo.findByUser(session.user)
                .associate { it.question to it.answer }

        // 5) –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∫–µ–π—Å—ã
        val caseAnswers: Map<Int, String> = session.dump()

        // 6) –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        val nick = session.user.username
        val pdfFile = pdf.build(
            chatId    = chatId,
            nike      = nick,
            surveyAns = surveyAnswers,
            caseAns   = caseAnswers,
            cat       = catalog
        )

        // 7) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        sender.send(
            chatId, """
            –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! üèÅ
            –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. 
            –°–ø–∞—Å–∏–±–æ.
        """.trimIndent()
        )

        // 8) –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç—å—é—Ç–æ—Ä—Å—Ç–≤–µ
        sender.send(
            chatId, """
            –ú–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–º, –∫—Ç–æ —Ç–∞–∫–æ–π —Ç—å—é—Ç–æ—Ä –≤ –û–ê–ù–û 
            –®–∫–æ–ª–∞ "–ù–ò–ö–ê" üëá
        """.trimIndent(), kb.abortTutor()
        )

        // 9) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É PDF —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        adminId?.let { admin ->
            sender.document(admin, pdfFile, "üì• –û—Ç–≤–µ—Ç—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ @${nick ?: chatId}")
        }
    }
}
